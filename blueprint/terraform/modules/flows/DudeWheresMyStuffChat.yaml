inboundChat:
  name: "{{flow_name}}"
  description: Chat bot for Dude Wheres My Stuff
  startUpRef: "/inboundChat/states/state[Initial State_20]"
  defaultLanguage: "{{default_language}}"
  supportedLanguages:
    en-us:
      defaultLanguageSkill:
        noValue: true
  variables:
    - queueVariable:
        name: Flow.legacyQueue
        initialValue:
          noValue: true
  settingsErrorHandling:
    errorHandling:
      queue:
        targetQueue:
          lit:
            name: dude-general-support
  states:
    - state:
        name: Initial State
        refId: Initial State_20
        variables:
          - stringVariable:
              name: State.ChatFirstName
              initialValue:
                noValue: true
          - stringVariable:
              name: State.CustomerFirstName
              initialValue:
                noValue: true
          - stringVariable:
              name: State.CustomerId
              initialValue:
                noValue: true
          - stringVariable:
              name: State.CustomerLastName
              initialValue:
                noValue: true
          - stringVariable:
              name: State.OrderNumber
              initialValue:
                noValue: true
          - stringVariable:
              name: State.OrderStatus
              initialValue:
                noValue: true
          - stringVariable:
              name: State.TheIntent
              initialValue:
                noValue: true
        actions:
          - callBotFlow:
              name: Call Bot Flow
              inputText:
                noValue: true
              exitReason:
                noValue: true
              intent:
                var: State.TheIntent
              botFlow:
                DudesWheresMyStuffBot:
                  ver_latestPublished:
                    inputs:
                      Slot.OrderNumberType:
                        noValue: true
                    outputs:
                      Slot.OrderNumberType:
                        var: State.OrderNumber
          - getParticipantData:
              name: Get Participant Data
              attributes:
                - attribute:
                    name:
                      lit: Context.CustomerFirstName
                    variable: State.ChatFirstName
          - switch:
              name: Switch
              evaluate:
                firstTrue:
                  default:
                    actions:
                      - transferToAcd:
                          name: Transfer to ACD
                          targetQueue:
                            lit:
                              name: dude-general-support
                          priority:
                            lit: 0
                          preferredAgents:
                            noValue: true
                          languageSkill:
                            noValue: true
                  cases:
                    - case:
                        value:
                          exp: State.TheIntent=="Check Order Status"
                        actions:
                          - setParticipantData:
                              name: Set Participant Data
                              attributes:
                                - attribute:
                                    name:
                                      lit: OrderNumber
                                    value:
                                      exp: State.OrderNumber
                          - callData:
                              name: Call Data Action
                              timeout:
                                lit:
                                  minutes: 1
                              category:
                                {{integration_category}} :
                                  dataAction:
                                    {{integration_data_action_name}}:
                                      inputs:
                                        OrderNumber:
                                          exp: State.OrderNumber
                                      successOutputs:
                                        CustomerFirstName:
                                          var: State.CustomerFirstName
                                        CustomerId:
                                          var: State.CustomerId
                                        CustomerLastName:
                                          var: State.CustomerLastName
                                        OrderNumber:
                                          var: State.OrderNumber
                                        OrderStatus:
                                          var: State.OrderStatus
                                      failureOutputs:
                                        errorCode:
                                          noValue: true
                                        status:
                                          noValue: true
                                        correlationId:
                                          noValue: true
                                        entityId:
                                          noValue: true
                                        entityName:
                                          noValue: true
                                        userMessage:
                                          noValue: true
                                        userParamsMessage:
                                          noValue: true
                                        userParams.key:
                                          noValue: true
                                        userParams.value:
                                          noValue: true
                                        details.errorCode:
                                          noValue: true
                                        details.fieldName:
                                          noValue: true
                                        details.entityId:
                                          noValue: true
                                        details.entityName:
                                          noValue: true
                              outputs:
                                success:
                                  actions:
                                    - sendResponse:
                                        name: Send Response
                                        messageBodyStyle:
                                          lit: notice
                                        messageBody:
                                          exp: "Trim(Append(\n    ToDisplayString(Append(\"Hi \", State.ChatFirstName, \", \")), \n    If(IsNotSetOrEmpty(ToDisplayString(Append(\"Hi \", State.ChatFirstName, \", \"))), \"\", \" \"), \n    ToDisplayString(Append(\"Thanks for reaching out to us about order #: \", State.OrderNumber)), \n    If(IsNotSetOrEmpty(ToDisplayString(Append(\"Thanks for reaching out to us about order #: \", State.OrderNumber))), \"\", \" \"), \n    ToDisplayString(Append(\"The status of the order is \", State.OrderStatus))))"
                                failure:
                                  actions:
                                    - sendResponse:
                                        name: Send Response
                                        messageBodyStyle:
                                          lit: notice
                                        messageBody:
                                          exp: "Trim(Append(\n    ToDisplayString(Append(\"Hi \", State.ChatFirstName)), \n    If(IsNotSetOrEmpty(ToDisplayString(Append(\"Hi \", State.ChatFirstName))), \"\", \" \"), \n    ToDisplayString(Append(\"We had some trouble looking up order #: \", State.OrderNumber)), \n    If(IsNotSetOrEmpty(ToDisplayString(Append(\"We had some trouble looking up order #: \", State.OrderNumber))), \"\", \" \"), \n    \"Sit tight, while I get an agent who can help with this situation.\"))"
                                    - transferToAcd:
                                        name: Transfer to ACD
                                        targetQueue:
                                          lit:
                                            name: dude-general-support
                                        priority:
                                          lit: 0
                                        preferredAgents:
                                          noValue: true
                                        languageSkill:
                                          noValue: true
                                timeout:
                                  actions:
                                    - sendResponse:
                                        name: Send Response
                                        messageBodyStyle:
                                          lit: notice
                                        messageBody:
                                          exp: "Trim(Append(\n    ToDisplayString(Append(\"Hi \", State.ChatFirstName, \"We had problems looking up order number: \", State.OrderNumber)), \n    If(IsNotSetOrEmpty(ToDisplayString(Append(\"Hi \", State.ChatFirstName, \"We had problems looking up order number: \", State.OrderNumber))), \"\", \" \"), \n    \"Please sit tight and I am getting an agent to help sort this out.\"))"
                                    - transferToAcd:
                                        name: Transfer to ACD
                                        targetQueue:
                                          lit:
                                            name: dude-general-support
                                        priority:
                                          lit: 0
                                        preferredAgents:
                                          noValue: true
                                        languageSkill:
                                          noValue: true
                    - case:
                        value:
                          exp: State.TheIntent=="Cancel my order"
                        actions:
                          - setParticipantData:
                              name: Set Participant Data
                              attributes:
                                - attribute:
                                    name:
                                      lit: OrderNumber
                                    value:
                                      exp: State.OrderNumber
                          - sendResponse:
                              name: Send Response
                              messageBodyStyle:
                                lit: notice
                              messageBody:
                                exp: "Trim(Append(\n    ToDisplayString(Append(\"Hi \", State.ChatFirstName)), \n    If(IsNotSetOrEmpty(ToDisplayString(Append(\"Hi \", State.ChatFirstName))), \"\", \" \"), \n    ToDisplayString(Append(\"I am sorry you want to cancel order number #\", State.OrderNumber)), \n    If(IsNotSetOrEmpty(ToDisplayString(Append(\"I am sorry you want to cancel order number #\", State.OrderNumber))), \"\", \" \"), \n    \"Let me get you an agent to assist you with this right away.\"))"
                          - transferToAcd:
                              name: Transfer to ACD
                              targetQueue:
                                lit:
                                  name: dude-cancellations
                              priority:
                                lit: 0
                              preferredAgents:
                                noValue: true
                              languageSkill:
                                noValue: true
                    - case:
                        value:
                          exp: State.TheIntent=="Order Questions"
                        actions:
                          - setParticipantData:
                              name: Set Participant Data
                              attributes:
                                - attribute:
                                    name:
                                      lit: OrderNumber
                                    value:
                                      exp: State.OrderNumber
                          - sendResponse:
                              name: Send Response
                              messageBodyStyle:
                                lit: notice
                              messageBody:
                                lit: What is the sound of a server crashing?
                          - transferToAcd:
                              name: Transfer to ACD
                              targetQueue:
                                lit:
                                  name: dude-general-support
                              priority:
                                lit: 0
                              preferredAgents:
                                noValue: true
                              languageSkill:
                                noValue: true
          - disconnect:
              name: Disconnect
  tasks:
    - task:
        name: Find Legacy Queue
        refId: Find Legacy Queue_11
        variables:
          - integerVariable:
              name: Task.chatGuestCustomFieldsIndex
              initialValue:
                noValue: true
          - stringVariable:
              name: Task.targetQueueIdOrName
              initialValue:
                noValue: true
        actions:
          - loop:
              name: Loop through Chat.Guest.customFields
              currentIndex:
                var: Task.chatGuestCustomFieldsIndex
              loopCount:
                exp: Count(Chat.Guest.customFields)
              outputs:
                loop:
                  actions:
                    - decision:
                        name: Legacy routing custom field found?
                        condition:
                          exp: AreEqual("context.genesys.legacyRoutingTargetQueueAddress", Chat.Guest.customFields[Task.chatGuestCustomFieldsIndex].key) or AreEqual("genesys.legacyRoutingTargetQueueAddress", Chat.Guest.customFields[Task.chatGuestCustomFieldsIndex].key)
                        outputs:
                          yes:
                            actions:
                              - updateData:
                                  name: Save queue ID/name to variable
                                  statements:
                                    - string:
                                        variable: Task.targetQueueIdOrName
                                        value:
                                          exp: Chat.Guest.customFields[Task.chatGuestCustomFieldsIndex].value
                              - loopExit:
                                  name: Exit Loop
          - decision:
              name: Queue ID/name found?
              condition:
                exp: "!IsNotSetOrEmpty(Task.targetQueueIdOrName)"
              outputs:
                yes:
                  actions:
                    - findQueueById:
                        name: Find queue based on ID
                        findId:
                          exp: Task.targetQueueIdOrName
                        findResult:
                          var: Flow.legacyQueue
                        outputs:
                          notFound:
                            actions:
                              - findQueue:
                                  name: Find queue based on name
                                  findName:
                                    exp: Task.targetQueueIdOrName
                                  findResult:
                                    var: Flow.legacyQueue
          - endTask:
              name: End Task
              outputPath:
                name: Default
